data_dir: '/zfsauton3/home/gis/research/relation_extraction/gcn-over-pruned-trees/dataset/full_tacred/tacred/data/json/relabeled'
eval_file: /zfsauton3/home/gis/research/relation_extraction/gcn-over-pruned-trees/dataset/full_tacred/tacred/data/json/test.json
vocab_dir: '/zfsauton3/home/gis/research/relation_extraction/gcn-over-pruned-trees/dataset/full_tacred/tacred/data/vocab'
test_save_dir: '/home/scratch/gis/tacred_test_performances'
save_dir: '/home/scratch/gis/saved_models'
emb_dim: 300  # Word embedding dimension.
ner_dim: 30 # NER embedding dimension.
pos_dim: 30 # POS embedding dimension.
hidden_dim: 200 # RNN hidden state size.
num_layers: 2 # Num of RNN layers.
input_dropout: .5 # Input and RNN dropout rate.
gcn_dropout: .5
word_dropout: .04 # The rate at which randomly set a word to UNK.
topn: 1e10  # Only finetune top N embeddings.
lower: False  # Lowercase all words.
prune_k: 1
conv_l2: 0
pooling: 'max' # ['max', 'avg', 'sum']
pooling_l2: 0.003
mlp_layers: 2
no_adj: False
rnn: True
rnn_hidden: 200
rnn_layers: 1
rnn_dropout: 0.5
lr: 0.3 # Applies to SGD and Adagrad
lr_decay: 0.9
decay_epoch: 5
optim: 'sgd'  # sgd, adagrad, adam or adamax.
num_epoch: 100 # number of epochs
batch_size: 50
max_grad_norm: 5.0  # Gradient Clipping.
log_step: 20  # Print log every k steps.
log:  'logs.txt'  # Write training log to file.
save_epoch: 100 # Save model checkpoints every k epochs
id: ''  # Model ID under which to save models.
info: ''  # Optional info for the experiment.
seed: 0  # random seed
cuda: True
cpu: False # Ignore CUDA.
load: False
model_file:
data_type: unpatched
version: full
link_prediction:
#  model: 'ConvE'
#  label_smoothing: .1
#  lambda: .1
#  freeze_network: False
#  with_relu: True
#  without_observed: False
#  without_verification: False
#  without_no_relation: False
